{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "vmName": {
      "type": "string",
      "metadata": {
        "description": "The name of the VM to create"
      }
    },
    "vmSize": {
      "type": "string",
      "metadata": {
        "description": "The size of the VM to create"
      },
      "defaultValue": "Standard_D4_v3"
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "The name of the administrator account to create"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The password for the Administrator account"
      }
    },
    "domainName": {
      "type": "string",
      "metadata": {
        "description": "The FQDN of the Active Directory Domain to be created"
      }
    },
    "existingVnetName": {
      "type": "string",
      "metadata": {
        "description": "The name of the Virtual Network to connect to"
      }
    },
    "existingSubnetName": {
      "type": "string",
      "metadata": {
        "description": "The name of the subnet to connect to"
      }
    },
    "existingAvailabilitySetName": {
      "type": "string",
      "metadata": {
        "description": "The name of the availability set"
      }
    },
    "loadBalancerName": {
      "type": "string",
      "metadata": {
        "description": "The name of the Load Balancer"
      }
    },
    "loadBalancerBackendName": {
      "type": "string",
      "metadata": {
        "description": "The name of the Load Balancer backend"
      }
    },
    "existingSqlInstance": {
      "type": "string",
      "metadata": {
        "description": "The name of the SQL Server to use for TFS"
      }
    },
    "_artifactsLocation": {
      "type": "string",
      "metadata": {
        "description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."
      }
    },
    "_artifactsLocationSasToken": {
      "type": "securestring",
      "metadata": {
        "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "virtualNetworkName": {
      "type": "string",
      "metadata": {
        "description": "Virtual Network name."
      }
    },
    "logAnalyticsWorkspaceName": {
      "type": "string"
    },
    "managementResourceGroupName": {
      "type": "string"
    }
  },
  "variables": {
    "networkInterfaceName": "[concat(parameters('vmName'), '-nic')]",
    "loadBalancerBackendName": "[concat(parameters('loadBalancerName'), '-backend')]",
    "loadBalancerFrontendName": "[concat(parameters('loadBalancerName'), '-frontend')]",
    "loadBalancerID": "[resourceId('Microsoft.Network/loadBalancers',parameters('loadBalancerName'))]",
    "subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('existingVnetName'), parameters('existingSubnetName'))]"
  },
  "resources": [
    {
      "apiVersion": "2015-06-15",
      "name": "[parameters('loadBalancerName')]",
      "type": "Microsoft.Network/loadBalancers",
      "location": "[parameters('location')]",
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "[variables('loadBalancerFrontendName')]",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "[variables('loadBalancerBackendName')]"
          }
        ],
        "inboundNatRules": [
          {
              "name": "tfs-rdp",
              "properties": {
                  "frontendIPConfiguration": {
                      "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancerName')), '/frontendIpConfigurations/', variables('loadBalancerFrontendName'))]"
                  },
                  "protocol": "Tcp",
                  "frontendPort": 3389,
                  "backendPort": 3389,
                  "enableFloatingIP": false
              }
          }
        ],
        "loadBalancingRules": [
          {
            "properties": {
              "frontendIPConfiguration": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancerName')), '/frontendIpConfigurations/', variables('loadBalancerFrontendName'))]"
              },
              "backendAddressPool": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancerName')), '/backendAddressPools/', variables('loadBalancerBackendName'))]"
              },
              "probe": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancerName')), '/probes/lbprobe')]"
              },
              "protocol": "Tcp",
              "frontendPort": 80,
              "backendPort": 80,
              "idleTimeoutInMinutes": 15
            },
            "name": "lbrule"
          }
        ],
        "probes": [
          {
            "properties": {
              "protocol": "Tcp",
              "port": 80,
              "intervalInSeconds": 15,
              "numberOfProbes": 2
            },
            "name": "lbprobe"
          }
        ]
      }
    },
    {
      "apiVersion": "2017-09-01",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('networkInterfaceName')]",
      "location": "[parameters('location')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancerName')), '/backendAddressPools/', variables('loadBalancerBackendName'))]"
                }
              ],
              "loadBalancerInboundNatRules": [
                {
                  "id": "[concat(variables('loadBalancerID'),'/inboundNatRules/tfs-rdp')]"
                }
              ],
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2017-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[parameters('vmName')]",
      "location": "[parameters('location')]",
      "identity": {
        "type": "SystemAssigned"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces/', variables('networkInterfaceName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('existingAvailabilitySetName'))]"
        },
        "osProfile": {
          "computerName": "[parameters('vmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "2019-Datacenter",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat(parameters('vmName'), '-osdisk')]",
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('networkInterfaceName'))]"
            }
          ]
        }
      }
    },
    {
      "apiVersion": "2017-03-30",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(parameters('vmName'),'/JoinDomain')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', parameters('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Compute",
        "type": "JsonADDomainExtension",
        "typeHandlerVersion": "1.3",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "Name": "[parameters('domainName')]",
          "OUPath": "",
          "User": "[concat(parameters('domainName'), '\\', parameters('adminUsername'))]",
          "Restart": "true",
          "Options": "3"
        },
        "protectedSettings": {
          "Password": "[parameters('adminPassword')]"
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(concat(parameters('vmName')),'/OMSExtension')]",
      "apiVersion": "2017-12-01",
      "location": "[parameters('location')]",
      "dependsOn": [
          "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.EnterpriseCloud.Monitoring",
        "type": "MicrosoftMonitoringAgent",
        "typeHandlerVersion": "1.0",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "workspaceId": "[resourceId(parameters('managementResourceGroupName'),'Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName'))]"

        },
        "protectedSettings": {
          "workspaceKey": "[listKeys(resourceId(parameters('managementResourceGroupName'),'Microsoft.OperationalInsights/workspaces/', parameters('logAnalyticsWorkspaceName')), '2017-04-26-preview').primarySharedKey]"
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "apiVersion": "2018-10-01",
      "name": "[concat(parameters('vmName'), '/IaaSAntimalware')]",
      "location": "[parameters('location')]",
      "dependsOn": [
          "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
      ],
      "properties": {
          "autoUpgradeMinorVersion": true,
          "publisher": "Microsoft.Azure.Security",
          "type": "IaaSAntimalware",
          "typeHandlerVersion": "1.3",
          "settings": {
              "AntimalwareEnabled": true,
              "RealtimeProtectionEnabled": "true",
              "ScheduledScanSettings": {
                  "isEnabled": "false",
                  "day": "7",
                  "time": "120",
                  "scanType": "Quick"
              },
              "Exclusions": {
                  "Paths": "",
                  "Extensions": "",
                  "Processes": ""
              }
          }
      }
    },
    {
      "apiVersion": "2017-03-30",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(parameters('vmName'),'/ConfigureTfs')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines/extensions', parameters('vmName'), 'JoinDomain')]"
      ],
      "tags": {
        "displayName": "Configure TFS"
      },
      "properties": {
        "publisher": "Microsoft.Compute",
        "type": "CustomScriptExtension",
        "typeHandlerVersion": "1.8",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": [
            "[concat(parameters('_artifactsLocation'), '/scripts/ConfigureTfsRemoteSql.ps1', parameters('_artifactsLocationSasToken'))]"
          ]
        },
        "protectedSettings": {
          "commandToExecute": "[concat('powershell -ExecutionPolicy Unrestricted -File ConfigureTfsRemoteSql.ps1', ' ', parameters('existingSqlInstance'), ' ', concat(parameters('domainName'), '\\', parameters('adminUsername')), ' ', parameters('adminPassword'))]"
        }
      }
    }
  ]
}
